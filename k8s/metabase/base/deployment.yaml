apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: metabase-data-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
  - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase-deployment
  labels:
    app.kubernetes.io/name: metabase
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metabase
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metabase
        app.kubernetes.io/part-of: metabase
        app.kubernetes.io/component: omegaup-metabase
    spec:
      containers:
      - name: metabase
        image: metabase/metabase:v0.50.28.6
        imagePullPolicy: IfNotPresent
        env:
        - name: MB_DB_FILE
          value: /metabase-data/metabase.db
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 768Mi
        volumeMounts:
        - name: metabase-data
          mountPath: /metabase-data
      volumes:
      - name: metabase-data
        persistentVolumeClaim:
          claimName: metabase-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: metabase-service
  labels:
    app.kubernetes.io/name: metabase
spec:
  selector:
    app.kubernetes.io/name: metabase
  ports:
  - name: http
    protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metabase-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.org/hsts: true
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: metabase.omegaup.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metabase-service
            port:
              number: 3000
  tls:
  - hosts:
    - metabase.omegaup.com
    secretName: metabase-ingress-cert
